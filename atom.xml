<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JBlog</title>
  
  <subtitle>jioaer Blog</subtitle>
  <link href="https://jiaoqingrui.github.io/atom.xml" rel="self"/>
  
  <link href="https://jiaoqingrui.github.io/"/>
  <updated>2021-05-01T11:16:30.985Z</updated>
  <id>https://jiaoqingrui.github.io/</id>
  
  <author>
    <name>Qingrui Jiao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>文档名字</title>
    <link href="https://jiaoqingrui.github.io/2021/05/01/JVM-class/"/>
    <id>https://jiaoqingrui.github.io/2021/05/01/JVM-class/</id>
    <published>2021-05-01T11:16:47.516Z</published>
    <updated>2021-05-01T11:16:30.985Z</updated>
    
    <content type="html"><![CDATA[<p>Class文件主要包括：</p><ul><li><p><strong>魔数</strong></p></li><li><ul><li>cafe babe：识别class文件</li></ul></li><li><p><strong>Class文件版本</strong></p></li><li><ul><li>M.m，主版本号.副版本号    </li></ul></li><li><p><strong>常量池</strong></p></li><li><ul><li>常量池计数器：索引是 count-1, 从1开始数，0表示不引用任何一个常量池中的项目</li><li>常量池表：包括字面量和符号引用两部分</li></ul></li></ul><p>通过一个对照表才能查到每一部分是表示的什么</p><ul><li><ul><li><ul><li><p>字面量</p></li><li><ul><li>文本字符串</li><li>声明为final的常量值</li></ul></li><li><p>符号引用</p></li><li><ul><li>类和接口的全限定名</li><li>字段的名称和描述符</li><li>方法的名称和描述符</li></ul></li></ul></li></ul></li><li><p><strong>访问标志</strong></p></li><li><p><strong>类索引、父类索引、接口索引集合</strong></p></li><li><p><strong>字段表集合</strong></p></li><li><ul><li>字段计数器</li><li>字段表（名字、类型、值、属性表等）</li></ul></li><li><p><strong>方法表集合</strong></p></li><li><ul><li>方法计数器</li><li>方法表（访问标志、方法名索引、描述符索引、属性计数器、属性集合）</li></ul></li><li><p><strong>属性表集合</strong></p></li></ul><p>class文件只有两种数据类型：无符号数 和 表</p><p>为什么要有常量池表：因为class文件无法直接被执行，需要加载才能被执行，在加载之前并不知道内存地址是什么，所以需要先保存在符号引用，加载之后通过动态链接再确定相应的地址</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Class文件主要包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;魔数&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;cafe babe：识别class文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Class文件版本&lt;/st</summary>
      
    
    
    
    <category term="JVM" scheme="https://jiaoqingrui.github.io/categories/JVM/"/>
    
    
    <category term="JVM" scheme="https://jiaoqingrui.github.io/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>双亲委派机制</title>
    <link href="https://jiaoqingrui.github.io/2021/05/01/JVM-parent/"/>
    <id>https://jiaoqingrui.github.io/2021/05/01/JVM-parent/</id>
    <published>2021-05-01T11:07:55.677Z</published>
    <updated>2021-05-01T11:07:49.884Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>jdk1.2开始：Java虚拟机对class文件采用按需加载的方式，只有在使用该类的时候才会将它的Class文件加载到内存中生成Class文件，并且在加载Class的时候使用双亲委派机制，即请求交由父类处理，它是一种任务委派模式。</p></blockquote><p><strong>工作原理：</strong></p><ol><li><p>如果一个类加载器收到了类加载请求，它并不会自己先去加载，而是把这个请求委托给父类的加载器去执行;</p></li><li><p>如果父类加载器还存在其父类加载器，则进一步向上委托，依次递归,请求最终将到达顶层的启动类加载器;</p></li><li><p>如果父类加载器可以完成类加载任务，就成功返回，倘若父类加载器无法完成此加载任务，子加载器才会尝试自己去加载，这就是双亲委派模式。</p></li></ol><p><strong>优势：</strong></p><ol><li><p>避免类的重复加载，确保一个类是全局唯一的</p></li><li><p>保护程序安全，防止核心API被随意篡改</p></li></ol><p>比如自定义类定义在了Lang包下面 ，就会报错</p><p><strong>代码层面：</strong></p><ol><li><p>先在当前加载器的缓存中查找有无目标类，如果有，直接返回。</p></li><li><p>判断当前加载器的父加载器是否为空，如果不为空，则调用parent.loadClass(name，false)接口进行加载。</p></li><li><p>反之，如果当前加载器的父类加载器为空，则调用findBootstrapClass0rNull(name)接口，让引导类加载器进行加载。</p></li><li><p>如果通过以上3条路径都没能成功加载，则调用findClass(name)接口进行加载。该接口最终会调用java.lang.classLoader接口的defineClass系列的native接口加载目标Java类。</p></li></ol><p>双亲委派的模型就隐藏在这第2和第3步中。</p><p><strong>三次破坏行为：</strong></p><ol><li><p>JDK1.2之前不支持</p></li><li><p>线程上下文类加载器（反向委托）</p></li><li><p>用户对程序的动态性追求，如代码热替换，模块热部署</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;jdk1.2开始：Java虚拟机对class文件采用按需加载的方式，只有在使用该类的时候才会将它的Class文件加载到内存中生成Class文件，并且在加载Class的时候使用双亲委派机制，即请求交由父类处理，它是一种任务委派模式。&lt;/p&gt;</summary>
      
    
    
    
    <category term="JVM" scheme="https://jiaoqingrui.github.io/categories/JVM/"/>
    
    
    <category term="JVM" scheme="https://jiaoqingrui.github.io/tags/JVM/"/>
    
    <category term="Java" scheme="https://jiaoqingrui.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://jiaoqingrui.github.io/2021/05/01/undefined/"/>
    <id>https://jiaoqingrui.github.io/2021/05/01/undefined/</id>
    <published>2021-05-01T10:06:16.076Z</published>
    <updated>2021-05-01T10:06:16.076Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
